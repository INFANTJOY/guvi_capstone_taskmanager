{"ast":null,"code":"import React,{useState}from'react';import{useDispatch,useSelector}from'react-redux';import{createTask}from'../actions/taskActions';import Message from'./Message';import Loader from'./Loader';import{TASK_CREATE_RESET}from'../constants/taskConstants';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AddTaskForm=()=>{const[title,setTitle]=useState('');const[description,setDescription]=useState('');const[status,setStatus]=useState('todo');const[dueDate,setDueDate]=useState('');const[isFormOpen,setIsFormOpen]=useState(false);const dispatch=useDispatch();const taskCreate=useSelector(state=>state.taskCreate);const{loading,error,success}=taskCreate;const submitHandler=e=>{e.preventDefault();dispatch(createTask({title,description,status,dueDate}));// Reset form if successful\nif(success){setTitle('');setDescription('');setStatus('todo');setDueDate('');setIsFormOpen(false);dispatch({type:TASK_CREATE_RESET});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"add-task-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary add-task-toggle\",onClick:()=>setIsFormOpen(!isFormOpen),children:isFormOpen?'Cancel':'Add New Task'}),isFormOpen&&/*#__PURE__*/_jsxs(\"div\",{className:\"add-task-form\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Add New Task\"}),error&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}),loading&&/*#__PURE__*/_jsx(Loader,{}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Title\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter task title\",value:title,onChange:e=>setTitle(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"Enter task description\",value:description,onChange:e=>setDescription(e.target.value),rows:\"3\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Status\"}),/*#__PURE__*/_jsxs(\"select\",{value:status,onChange:e=>setStatus(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"todo\",children:\"To Do\"}),/*#__PURE__*/_jsx(\"option\",{value:\"in-progress\",children:\"In Progress\"}),/*#__PURE__*/_jsx(\"option\",{value:\"completed\",children:\"Completed\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Due Date\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:dueDate,onChange:e=>setDueDate(e.target.value)})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-success\",children:\"Add Task\"})]})]})]});};export default AddTaskForm;","map":{"version":3,"names":["React","useState","useDispatch","useSelector","createTask","Message","Loader","TASK_CREATE_RESET","jsx","_jsx","jsxs","_jsxs","AddTaskForm","title","setTitle","description","setDescription","status","setStatus","dueDate","setDueDate","isFormOpen","setIsFormOpen","dispatch","taskCreate","state","loading","error","success","submitHandler","e","preventDefault","type","className","children","onClick","variant","onSubmit","placeholder","value","onChange","target","required","rows"],"sources":["/Users/infantjoy/Development/Projects/AI Development/guvi_capstone/client/src/components/AddTaskForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createTask } from '../actions/taskActions';\nimport Message from './Message';\nimport Loader from './Loader';\nimport { TASK_CREATE_RESET } from '../constants/taskConstants';\n\nconst AddTaskForm = () => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [status, setStatus] = useState('todo');\n  const [dueDate, setDueDate] = useState('');\n  const [isFormOpen, setIsFormOpen] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const taskCreate = useSelector((state) => state.taskCreate);\n  const { loading, error, success } = taskCreate;\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    \n    dispatch(createTask({\n      title,\n      description,\n      status,\n      dueDate\n    }));\n\n    // Reset form if successful\n    if (success) {\n      setTitle('');\n      setDescription('');\n      setStatus('todo');\n      setDueDate('');\n      setIsFormOpen(false);\n      dispatch({ type: TASK_CREATE_RESET });\n    }\n  };\n\n  return (\n    <div className=\"add-task-container\">\n      <button \n        className=\"btn btn-primary add-task-toggle\" \n        onClick={() => setIsFormOpen(!isFormOpen)}\n      >\n        {isFormOpen ? 'Cancel' : 'Add New Task'}\n      </button>\n\n      {isFormOpen && (\n        <div className=\"add-task-form\">\n          <h3>Add New Task</h3>\n          {error && <Message variant=\"danger\">{error}</Message>}\n          {loading && <Loader />}\n          <form onSubmit={submitHandler}>\n            <div className=\"form-group\">\n              <label>Title</label>\n              <input\n                type=\"text\"\n                placeholder=\"Enter task title\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n                required\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Description</label>\n              <textarea\n                placeholder=\"Enter task description\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n                rows=\"3\"\n              ></textarea>\n            </div>\n\n            <div className=\"form-group\">\n              <label>Status</label>\n              <select \n                value={status} \n                onChange={(e) => setStatus(e.target.value)}\n              >\n                <option value=\"todo\">To Do</option>\n                <option value=\"in-progress\">In Progress</option>\n                <option value=\"completed\">Completed</option>\n              </select>\n            </div>\n\n            <div className=\"form-group\">\n              <label>Due Date</label>\n              <input\n                type=\"date\"\n                value={dueDate}\n                onChange={(e) => setDueDate(e.target.value)}\n              />\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-success\">\n              Add Task\n            </button>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AddTaskForm; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}