{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{useNavigate,useParams}from'react-router-dom';import{useDispatch,useSelector}from'react-redux';import Message from'../components/Message';import Loader from'../components/Loader';import{getTaskDetails,updateTask}from'../actions/taskActions';import{TASK_UPDATE_RESET,TASK_DETAILS_RESET}from'../constants/taskConstants';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const TaskEditScreen=()=>{const{id}=useParams();const navigate=useNavigate();const dispatch=useDispatch();const initialized=useRef(false);const[title,setTitle]=useState('');const[description,setDescription]=useState('');const[status,setStatus]=useState('todo');const[dueDate,setDueDate]=useState('');const userLogin=useSelector(state=>state.userLogin);const{userInfo}=userLogin;const taskDetails=useSelector(state=>state.taskDetails);const{loading,error,task}=taskDetails;const taskUpdate=useSelector(state=>state.taskUpdate);const{loading:loadingUpdate,error:errorUpdate,success:successUpdate}=taskUpdate;// Effect for authentication and task update success\nuseEffect(()=>{if(!userInfo){navigate('/login');}else if(successUpdate){dispatch({type:TASK_UPDATE_RESET});dispatch({type:TASK_DETAILS_RESET});navigate('/');}},[userInfo,successUpdate,navigate,dispatch]);// Effect for fetching task details\nuseEffect(()=>{if(userInfo&&!loading&&!error){if(!task||task._id!==id){dispatch(getTaskDetails(id));}else if(!initialized.current){setTitle(task.title||'');setDescription(task.description||'');setStatus(task.status||'todo');setDueDate(task.dueDate?task.dueDate.substring(0,10):'');initialized.current=true;}}return()=>{if(initialized.current){dispatch({type:TASK_DETAILS_RESET});initialized.current=false;}};},[dispatch,id,task,userInfo,loading,error]);const submitHandler=e=>{e.preventDefault();dispatch(updateTask({_id:id,title,description,status,dueDate}));};// Show a single loading state when either operation is in progress\nconst isLoading=loading||loadingUpdate;return/*#__PURE__*/_jsxs(\"div\",{className:\"form-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Edit Task\"}),isLoading?/*#__PURE__*/_jsx(Loader,{}):/*#__PURE__*/_jsxs(_Fragment,{children:[errorUpdate&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:errorUpdate}),error?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Title\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter title\",value:title,onChange:e=>setTitle(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"Enter description\",value:description,onChange:e=>setDescription(e.target.value),rows:\"4\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Status\"}),/*#__PURE__*/_jsxs(\"select\",{value:status,onChange:e=>setStatus(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"todo\",children:\"To Do\"}),/*#__PURE__*/_jsx(\"option\",{value:\"in-progress\",children:\"In Progress\"}),/*#__PURE__*/_jsx(\"option\",{value:\"completed\",children:\"Completed\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Due Date\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:dueDate,onChange:e=>setDueDate(e.target.value)})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",disabled:isLoading,children:\"Update\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-secondary\",onClick:()=>{dispatch({type:TASK_DETAILS_RESET});navigate('/');},disabled:isLoading,children:\"Cancel\"})]})]})]});};export default TaskEditScreen;","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useParams","useDispatch","useSelector","Message","Loader","getTaskDetails","updateTask","TASK_UPDATE_RESET","TASK_DETAILS_RESET","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TaskEditScreen","id","navigate","dispatch","initialized","title","setTitle","description","setDescription","status","setStatus","dueDate","setDueDate","userLogin","state","userInfo","taskDetails","loading","error","task","taskUpdate","loadingUpdate","errorUpdate","success","successUpdate","type","_id","current","substring","submitHandler","e","preventDefault","isLoading","className","children","variant","onSubmit","placeholder","value","onChange","target","required","rows","disabled","onClick"],"sources":["/Users/infantjoy/Development/Projects/AI Development/guvi_capstone/client/src/screens/TaskEditScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getTaskDetails, updateTask } from '../actions/taskActions';\nimport { TASK_UPDATE_RESET, TASK_DETAILS_RESET } from '../constants/taskConstants';\n\nconst TaskEditScreen = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const initialized = useRef(false);\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [status, setStatus] = useState('todo');\n  const [dueDate, setDueDate] = useState('');\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const taskDetails = useSelector((state) => state.taskDetails);\n  const { loading, error, task } = taskDetails;\n\n  const taskUpdate = useSelector((state) => state.taskUpdate);\n  const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = taskUpdate;\n\n  // Effect for authentication and task update success\n  useEffect(() => {\n    if (!userInfo) {\n      navigate('/login');\n    } else if (successUpdate) {\n      dispatch({ type: TASK_UPDATE_RESET });\n      dispatch({ type: TASK_DETAILS_RESET });\n      navigate('/');\n    }\n  }, [userInfo, successUpdate, navigate, dispatch]);\n\n  // Effect for fetching task details\n  useEffect(() => {\n    if (userInfo && !loading && !error) {\n      if (!task || task._id !== id) {\n        dispatch(getTaskDetails(id));\n      } else if (!initialized.current) {\n        setTitle(task.title || '');\n        setDescription(task.description || '');\n        setStatus(task.status || 'todo');\n        setDueDate(task.dueDate ? task.dueDate.substring(0, 10) : '');\n        initialized.current = true;\n      }\n    }\n    return () => {\n      if (initialized.current) {\n        dispatch({ type: TASK_DETAILS_RESET });\n        initialized.current = false;\n      }\n    };\n  }, [dispatch, id, task, userInfo, loading, error]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateTask({\n        _id: id,\n        title,\n        description,\n        status,\n        dueDate,\n      })\n    );\n  };\n\n  // Show a single loading state when either operation is in progress\n  const isLoading = loading || loadingUpdate;\n\n  return (\n    <div className=\"form-container\">\n      <h2>Edit Task</h2>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n          {error ? (\n            <Message variant=\"danger\">{error}</Message>\n          ) : (\n            <form onSubmit={submitHandler}>\n              <div className=\"form-group\">\n                <label>Title</label>\n                <input\n                  type=\"text\"\n                  placeholder=\"Enter title\"\n                  value={title}\n                  onChange={(e) => setTitle(e.target.value)}\n                  required\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Description</label>\n                <textarea\n                  placeholder=\"Enter description\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                  rows=\"4\"\n                ></textarea>\n              </div>\n\n              <div className=\"form-group\">\n                <label>Status</label>\n                <select value={status} onChange={(e) => setStatus(e.target.value)}>\n                  <option value=\"todo\">To Do</option>\n                  <option value=\"in-progress\">In Progress</option>\n                  <option value=\"completed\">Completed</option>\n                </select>\n              </div>\n\n              <div className=\"form-group\">\n                <label>Due Date</label>\n                <input\n                  type=\"date\"\n                  value={dueDate}\n                  onChange={(e) => setDueDate(e.target.value)}\n                />\n              </div>\n\n              <button \n                type=\"submit\" \n                className=\"btn btn-primary\"\n                disabled={isLoading}\n              >\n                Update\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={() => {\n                  dispatch({ type: TASK_DETAILS_RESET });\n                  navigate('/');\n                }}\n                disabled={isLoading}\n              >\n                Cancel\n              </button>\n            </form>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default TaskEditScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}