{"ast":null,"code":"import axios from'axios';import{USER_LOGIN_REQUEST,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL,USER_LOGOUT,USER_REGISTER_REQUEST,USER_REGISTER_SUCCESS,USER_REGISTER_FAIL}from'../constants/userConstants';// Login user\nexport const login=(email,password)=>async dispatch=>{try{dispatch({type:USER_LOGIN_REQUEST});const config={headers:{'Content-Type':'application/json'}};const{data}=await axios.post('http://localhost:3001/api/users/login',{email,password},config);dispatch({type:USER_LOGIN_SUCCESS,payload:data});localStorage.setItem('userInfo',JSON.stringify(data));}catch(error){dispatch({type:USER_LOGIN_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};// Logout user\nexport const logout=()=>dispatch=>{localStorage.removeItem('userInfo');dispatch({type:USER_LOGOUT});};// Register user\nexport const register=(name,email,password)=>async dispatch=>{try{dispatch({type:USER_REGISTER_REQUEST});const config={headers:{'Content-Type':'application/json'}};const{data}=await axios.post('http://localhost:3001/api/users/register',{name,email,password},config);dispatch({type:USER_REGISTER_SUCCESS,payload:data});// Log user in immediately after registration\ndispatch({type:USER_LOGIN_SUCCESS,payload:data});localStorage.setItem('userInfo',JSON.stringify(data));}catch(error){dispatch({type:USER_REGISTER_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};","map":{"version":3,"names":["axios","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name"],"sources":["/Users/infantjoy/Development/Projects/AI Development/guvi_capstone/client/src/actions/userActions.js"],"sourcesContent":["import axios from 'axios';\nimport {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n} from '../constants/userConstants';\n\n// Login user\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      'http://localhost:3001/api/users/login',\n      { email, password },\n      config\n    );\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// Logout user\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo');\n  dispatch({ type: USER_LOGOUT });\n};\n\n// Register user\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      'http://localhost:3001/api/users/register',\n      { name, email, password },\n      config\n    );\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    });\n\n    // Log user in immediately after registration\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n}; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OACEC,kBAAkB,CAClBC,kBAAkB,CAClBC,eAAe,CACfC,WAAW,CACXC,qBAAqB,CACrBC,qBAAqB,CACrBC,kBAAkB,KACb,4BAA4B,CAEnC;AACA,MAAO,MAAM,CAAAC,KAAK,CAAGA,CAACC,KAAK,CAAEC,QAAQ,GAAK,KAAO,CAAAC,QAAQ,EAAK,CAC5D,GAAI,CACFA,QAAQ,CAAC,CAAEC,IAAI,CAAEX,kBAAmB,CAAC,CAAC,CAEtC,KAAM,CAAAY,MAAM,CAAG,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAED,KAAM,CAAEC,IAAK,CAAC,CAAG,KAAM,CAAAf,KAAK,CAACgB,IAAI,CAC/B,uCAAuC,CACvC,CAAEP,KAAK,CAAEC,QAAS,CAAC,CACnBG,MACF,CAAC,CAEDF,QAAQ,CAAC,CACPC,IAAI,CAAEV,kBAAkB,CACxBe,OAAO,CAAEF,IACX,CAAC,CAAC,CAEFG,YAAY,CAACC,OAAO,CAAC,UAAU,CAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CAAC,CACxD,CAAE,MAAOO,KAAK,CAAE,CACdX,QAAQ,CAAC,CACPC,IAAI,CAAET,eAAe,CACrBc,OAAO,CACLK,KAAK,CAACC,QAAQ,EAAID,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,CACzCF,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,CAC3BF,KAAK,CAACE,OACd,CAAC,CAAC,CACJ,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,MAAM,CAAGA,CAAA,GAAOd,QAAQ,EAAK,CACxCO,YAAY,CAACQ,UAAU,CAAC,UAAU,CAAC,CACnCf,QAAQ,CAAC,CAAEC,IAAI,CAAER,WAAY,CAAC,CAAC,CACjC,CAAC,CAED;AACA,MAAO,MAAM,CAAAuB,QAAQ,CAAGA,CAACC,IAAI,CAAEnB,KAAK,CAAEC,QAAQ,GAAK,KAAO,CAAAC,QAAQ,EAAK,CACrE,GAAI,CACFA,QAAQ,CAAC,CAAEC,IAAI,CAAEP,qBAAsB,CAAC,CAAC,CAEzC,KAAM,CAAAQ,MAAM,CAAG,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAED,KAAM,CAAEC,IAAK,CAAC,CAAG,KAAM,CAAAf,KAAK,CAACgB,IAAI,CAC/B,0CAA0C,CAC1C,CAAEY,IAAI,CAAEnB,KAAK,CAAEC,QAAS,CAAC,CACzBG,MACF,CAAC,CAEDF,QAAQ,CAAC,CACPC,IAAI,CAAEN,qBAAqB,CAC3BW,OAAO,CAAEF,IACX,CAAC,CAAC,CAEF;AACAJ,QAAQ,CAAC,CACPC,IAAI,CAAEV,kBAAkB,CACxBe,OAAO,CAAEF,IACX,CAAC,CAAC,CAEFG,YAAY,CAACC,OAAO,CAAC,UAAU,CAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CAAC,CACxD,CAAE,MAAOO,KAAK,CAAE,CACdX,QAAQ,CAAC,CACPC,IAAI,CAAEL,kBAAkB,CACxBU,OAAO,CACLK,KAAK,CAACC,QAAQ,EAAID,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,CACzCF,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,CAC3BF,KAAK,CAACE,OACd,CAAC,CAAC,CACJ,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}