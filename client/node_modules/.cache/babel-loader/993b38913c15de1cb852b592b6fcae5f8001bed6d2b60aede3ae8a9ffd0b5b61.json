{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware}from'redux';import{thunk}from'redux-thunk';import{composeWithDevTools}from'redux-devtools-extension';import{userLoginReducer,userRegisterReducer}from'./reducers/userReducers';import{taskListReducer,taskDetailsReducer,taskCreateReducer,taskUpdateReducer,taskDeleteReducer}from'./reducers/taskReducers';const reducer=combineReducers({userLogin:userLoginReducer,userRegister:userRegisterReducer,taskList:taskListReducer,taskDetails:taskDetailsReducer,taskCreate:taskCreateReducer,taskUpdate:taskUpdateReducer,taskDelete:taskDeleteReducer});// Get user info from localStorage if available\nconst userInfoFromStorage=localStorage.getItem('userInfo')?JSON.parse(localStorage.getItem('userInfo')):null;const initialState={userLogin:{userInfo:userInfoFromStorage}};const middleware=[thunk];const store=createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...middleware)));export default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userRegisterReducer","taskListReducer","taskDetailsReducer","taskCreateReducer","taskUpdateReducer","taskDeleteReducer","reducer","userLogin","userRegister","taskList","taskDetails","taskCreate","taskUpdate","taskDelete","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"sources":["/Users/infantjoy/Development/Projects/AI Development/guvi_capstone/client/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { thunk } from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { userLoginReducer, userRegisterReducer } from './reducers/userReducers';\nimport { taskListReducer, taskDetailsReducer, taskCreateReducer, taskUpdateReducer, taskDeleteReducer } from './reducers/taskReducers';\n\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  taskList: taskListReducer,\n  taskDetails: taskDetailsReducer,\n  taskCreate: taskCreateReducer,\n  taskUpdate: taskUpdateReducer,\n  taskDelete: taskDeleteReducer,\n});\n\n// Get user info from localStorage if available\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null;\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store; "],"mappings":"AAAA,OAASA,WAAW,CAAEC,eAAe,CAAEC,eAAe,KAAQ,OAAO,CACrE,OAASC,KAAK,KAAQ,aAAa,CACnC,OAASC,mBAAmB,KAAQ,0BAA0B,CAC9D,OAASC,gBAAgB,CAAEC,mBAAmB,KAAQ,yBAAyB,CAC/E,OAASC,eAAe,CAAEC,kBAAkB,CAAEC,iBAAiB,CAAEC,iBAAiB,CAAEC,iBAAiB,KAAQ,yBAAyB,CAEtI,KAAM,CAAAC,OAAO,CAAGX,eAAe,CAAC,CAC9BY,SAAS,CAAER,gBAAgB,CAC3BS,YAAY,CAAER,mBAAmB,CACjCS,QAAQ,CAAER,eAAe,CACzBS,WAAW,CAAER,kBAAkB,CAC/BS,UAAU,CAAER,iBAAiB,CAC7BS,UAAU,CAAER,iBAAiB,CAC7BS,UAAU,CAAER,iBACd,CAAC,CAAC,CAEF;AACA,KAAM,CAAAS,mBAAmB,CAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAC5C,IAAI,CAER,KAAM,CAAAG,YAAY,CAAG,CACnBZ,SAAS,CAAE,CAAEa,QAAQ,CAAEN,mBAAoB,CAC7C,CAAC,CAED,KAAM,CAAAO,UAAU,CAAG,CAACxB,KAAK,CAAC,CAE1B,KAAM,CAAAyB,KAAK,CAAG5B,WAAW,CACvBY,OAAO,CACPa,YAAY,CACZrB,mBAAmB,CAACF,eAAe,CAAC,GAAGyB,UAAU,CAAC,CACpD,CAAC,CAED,cAAe,CAAAC,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}