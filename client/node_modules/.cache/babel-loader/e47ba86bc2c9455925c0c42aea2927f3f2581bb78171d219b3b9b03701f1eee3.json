{"ast":null,"code":"import axios from 'axios';\nimport { TASK_LIST_REQUEST, TASK_LIST_SUCCESS, TASK_LIST_FAIL, TASK_DETAILS_REQUEST, TASK_DETAILS_SUCCESS, TASK_DETAILS_FAIL, TASK_CREATE_REQUEST, TASK_CREATE_SUCCESS, TASK_CREATE_FAIL, TASK_UPDATE_REQUEST, TASK_UPDATE_SUCCESS, TASK_UPDATE_FAIL, TASK_DELETE_REQUEST, TASK_DELETE_SUCCESS, TASK_DELETE_FAIL } from '../constants/taskConstants';\n\n// Get all tasks\nexport const listTasks = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: TASK_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get('http://localhost:5000/api/tasks', config);\n    dispatch({\n      type: TASK_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: TASK_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// Get task details\nexport const getTaskDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: TASK_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`http://localhost:5000/api/tasks/${id}`, config);\n    dispatch({\n      type: TASK_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: TASK_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// Create a new task\nexport const createTask = task => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: TASK_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post('http://localhost:5000/api/tasks', task, config);\n    dispatch({\n      type: TASK_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: TASK_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// Update a task\nexport const updateTask = task => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: TASK_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`http://localhost:5000/api/tasks/${task._id}`, task, config);\n    dispatch({\n      type: TASK_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: TASK_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// Delete a task\nexport const deleteTask = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: TASK_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`http://localhost:5000/api/tasks/${id}`, config);\n    dispatch({\n      type: TASK_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: TASK_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","TASK_LIST_REQUEST","TASK_LIST_SUCCESS","TASK_LIST_FAIL","TASK_DETAILS_REQUEST","TASK_DETAILS_SUCCESS","TASK_DETAILS_FAIL","TASK_CREATE_REQUEST","TASK_CREATE_SUCCESS","TASK_CREATE_FAIL","TASK_UPDATE_REQUEST","TASK_UPDATE_SUCCESS","TASK_UPDATE_FAIL","TASK_DELETE_REQUEST","TASK_DELETE_SUCCESS","TASK_DELETE_FAIL","listTasks","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","get","payload","error","response","message","getTaskDetails","id","createTask","task","post","updateTask","put","_id","deleteTask","delete"],"sources":["/Users/infantjoy/Development/Projects/AI Development/guvi_capstone/client/src/actions/taskActions.js"],"sourcesContent":["import axios from 'axios';\nimport {\n  TASK_LIST_REQUEST,\n  TASK_LIST_SUCCESS,\n  TASK_LIST_FAIL,\n  TASK_DETAILS_REQUEST,\n  TASK_DETAILS_SUCCESS,\n  TASK_DETAILS_FAIL,\n  TASK_CREATE_REQUEST,\n  TASK_CREATE_SUCCESS,\n  TASK_CREATE_FAIL,\n  TASK_UPDATE_REQUEST,\n  TASK_UPDATE_SUCCESS,\n  TASK_UPDATE_FAIL,\n  TASK_DELETE_REQUEST,\n  TASK_DELETE_SUCCESS,\n  TASK_DELETE_FAIL,\n} from '../constants/taskConstants';\n\n// Get all tasks\nexport const listTasks = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: TASK_LIST_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get('http://localhost:5000/api/tasks', config);\n\n    dispatch({\n      type: TASK_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: TASK_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// Get task details\nexport const getTaskDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: TASK_DETAILS_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`http://localhost:5000/api/tasks/${id}`, config);\n\n    dispatch({\n      type: TASK_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: TASK_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// Create a new task\nexport const createTask = (task) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: TASK_CREATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post('http://localhost:5000/api/tasks', task, config);\n\n    dispatch({\n      type: TASK_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: TASK_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// Update a task\nexport const updateTask = (task) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: TASK_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `http://localhost:5000/api/tasks/${task._id}`,\n      task,\n      config\n    );\n\n    dispatch({\n      type: TASK_UPDATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: TASK_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// Delete a task\nexport const deleteTask = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: TASK_DELETE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    await axios.delete(`http://localhost:5000/api/tasks/${id}`, config);\n\n    dispatch({ type: TASK_DELETE_SUCCESS });\n  } catch (error) {\n    dispatch({\n      type: TASK_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}